service: serverless-rest-api

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage, 'dev'} # default to stage 'dev', allow override from CLI
  environment:
    #reference the output variable mailboxDynamoDbTableName defined in serverless-provisioning-dbonly project (in the appropriate stage)
    DYNAMODB_TABLE_MBOX: ${cf:serverless-provisioning-dbonly-${self:provider.stage}.mailboxesDynamoDbTableName}   
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        #reference the output variable mailboxDynamoDbTableArn defined in serverless-provisioning-dbonly project (in the appropriate stage)
        ${cf:serverless-provisioning-dbonly-${self:provider.stage}.mailboxesDynamoDbTableArn} 

functions:
  createMailbox:
    handler: mailboxes/createMailbox.create
    events:
      - http:
          path: mailboxes
          method: post
          cors: true

  listMailboxes:
    handler: mailboxes/listMailboxes.list
    events:
      - http:
          path: mailboxes
          method: get
          cors: true

  getMailbox:
    handler: mailboxes/getMailbox.get
    events:
      - http:
          path: mailboxes/{id}
          method: get
          cors: true

  updateMailbox:
    handler: mailboxes/updateMailbox.update
    events:
      - http:
          path: mailboxes/{id}
          method: put
          cors: true

  deleteMailbox:
    handler: mailboxes/deleteMailbox.delete
    events:
      - http:
          path: mailboxes/{id}
          method: delete
          cors: true

